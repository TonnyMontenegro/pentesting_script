#!/bin/bash

#Define la ruta de ETC_HOSTS
ETC_HOSTS=/etc/hosts

### Comprueba si docker esta instalado,en caso contrario lo instala ###
if ! [ -x "$(command -v docker)" ]; then
  echo -e  
  echo -e  "\e[1;33m No se econtro docker instalado, se procede a instalarlo"
    if fuser /var/lib/dpkg/lock > /dev/null 2>&1 
    then 
            echo -e  "\e[1;31m Ya se encuentra otro proceso de instalacion, espere a que termine para continuar \e[0m"
            exit
    fi
    echo -e  "\e[1;32m Actualizando el sistema \e[0m"
    sudo apt-get update

    # Instala las dependencias
    sudo apt-get install \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg-agent \
        software-properties-common

    # Añade la gpg key de docker
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -

    if grep -q download.docker.com /etc/apt/sources.lista; then
    echo -e  "\e[1;32msources.lista ya contiene download.docker.com\e[0m"
    else
    echo -e  "\e[1;32mAñadiendo download.docker.com a sources.lista\e[0m"
    echo -e  "deb [arch=amd64] https://download.docker.com/linux/debian buster stable" | sudo tee --append /etc/apt/sources.lista > /dev/null

    fi

    echo -e  "\e[1;32mActualizando el sistema\e[0m"
    sudo apt-get update

    echo -e  "\e[1;32mInstalando docker\e[0m"
    sudo apt-get install docker-ce docker-ce-cli containerd.io

    echo -e  "\e[1;32mHabilitando auto inicio de docker\e[0m"
    sudo systemctl enable docker

else

  echo -e  "\e[1;32m Docker ya esta instalado en el sistema. \e[0m" 

fi


### Comprueba si el servicio de docker esta activo y lo inicia ###
if sudo service docker status | grep inactive > /dev/null
then 
	echo -e  "\e[1;31mERROR: Docker no esta corriendo.\e[0m"
	echo -e  "\e[1;33mDesea iniciarlo? (s/n)\e[0m"
	read respuesta
	if echo -e  "$respuesta" | grep -iq "^s"; then
        echo -e  "\e[1;32mIniciando docker.\e[0m"
		sudo service docker start
	else
        echo -e  "\e[1;31mNo iniciando. No se puede ejcutar el script sin docker.\e[0m"
	fi
else

  echo -e  "\e[1;32m Docker ya esta corriendo. \e[0m"

fi


### lista las applicaciones vunerables que se pueden usar para nuestro lab ###
lista() {
    echo -e  "\e[1;36mlistado de aplicaciones vulnerables para pentesting\e[0m"
    echo -e  "  bwapp 		              - bWAPP PHP/MySQL basada en itsecgames.com"
    echo -e  "  webgoat7		            - WebGoat 7.1 OWASP Flagship Project"
    echo -e  "  webgoat8		            - WebGoat 8.0 OWASP Flagship Project"
    echo -e  "  nodegoat		            - NodeGoat OWASP Project"
    echo -e  "  dvwa     		            - Damn Vulnerable Web Application"
    echo -e  "  mutillidae		          - OWASP Mutillidae II"
    echo -e  "  juiceshop		            - OWASP Juice Shop"
    echo -e  "  vulnerablewordpress	    - WPScan Vulnerable Wordpress"
    echo -e  "  securityninjas	        - OpenDNS Security Ninjas"
    echo -e 
    exit 1

}

info() {
  case "$1" in 
    bwapp)
      project_info_bwapp
      ;;
    webgoat7)
      project_info_webgoat7
      ;;
    webgoat8)
      project_info_webgoat8      
      ;;
    nodegoat)
      project_info_nodegoat      
      ;;
    dvwa)
      project_info_dvwa 
      ;;
    mutillidae)
      project_info_mutillidae
    ;;
    juiceshop)
      project_info_juiceshop
    ;;
    vulnerablewordpress)
      project_info_vulnerablewordpress
    ;;
    securityninjas)
      project_info_securityninjas
    ;;
    *) 
      echo -e  "\e[1;31mError: $1 no es una opcion valida.\e[0m"
      lista
      ;;
  esac  
}

# Basado en https://gist.github.com/irazasyed/a7b0a079e7727a4315b9
function removehost() {
    if [ -n "$(grep $1 /etc/hosts)" ]
    then
        echo -e  "\e[1;31mEliminando $1 from $ETC_HOSTS";
        sudo sed -i".bak" "/$1/d" $ETC_HOSTS
    else
        echo -e "\e[1;31m$1 no fue encontrado en $ETC_HOSTS";
    fi
}

function addhost() { # ex. 127.5.0.1 bwapp
    HOSTS_LINE="$1\t$2"
    if [ -n "$(grep $2 /etc/hosts)" ]
        then
            echo -e "\e[1;31m$2 ya existe en /etc/hosts"
        else
            echo -e "\e[1;32mAñadiendo $2 en $ETC_HOSTS";
            sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts";

            if [ -n "$(grep $2 /etc/hosts)" ]
                then
                    echo -e "\e[1;32m$HOSTS_LINE fue añadido con exito a /etc/hosts";
                else
                    echo -e  "\e[1;31mError: no se pudo añadir $2, Vuelvalo a intentar!";
            fi
    fi
}


ayuda() {
    echo -e "Scrip para administrar laboratorios de pentesting en docker" 
    echo
    echo -e "Uso: $0 {lista|estado|info|iniciar|detener} [NombreDelProyecto]"
    echo
    echo -e "Este script usa docker y los alias de host para hacer disponible de manera local las apps vulnerables"
    echo
    echo
    echo
    echo -e "Ejemplos..."
    echo -e "$ $0 lista"
    echo -e "Muestra la lista de proyectos disponibles"
    echo
    echo -e  "$ $0 estado"
    echo -e  "Muestra el estado de cada uno de los proyectos"
    echo
    echo -e  "$ $0 iniciar bwapp"
    echo -e  "Inicia la descarga de la imagen y la configuracion para hacerla disponible de manera local" 
    echo
    echo -e  "$0 info bwapp"
    echo -e  "Muestra la informacion detallada de dicho proyecto"
    echo
    echo
    echo
    echo -e  " Fuentes de los dockers:"
    echo -e  "  DVWA                   - Ryan Dewhurst (vulnerables/web-dvwa)"
    echo -e  "  Mutillidae II          - Nikolay Golub (citizenstig/nowasp)"
    echo -e  "  bWapp                  - Rory McCune (raesene/bwapp)"
    echo -e  "  Webgoat(s)             - OWASP Project"
    echo -e  "  NodeGoat		           - Ben McMahon (bjm243/nodegoat)"
    echo -e  "  Juice Shop             - Bjoern Kimminich (bkimminich/juice-shop)"
    echo -e  "  Vulnerable Wordpress   - WPScan Team (l505/vulnerablewordpress)"
    echo -e  "  Security Ninjas        - OpenDNS Security Ninjas AppSec Training"
    echo
    exit 1
}


########################################################### BWAPP ###########################################################

project_info_bwapp () 
{
echo " bWAPP o  buggy web application, es una aplicación web gratuita y de código abierto deliberadamente insegura."
echo " Ayuda a los entusiastas de la seguridad, desarrolladores y estudiantes a descubrir y prevenir vulnerabilidades web."
echo " bWAPP te prepara para realizar pruebas de penetración exitosas y proyectos de hacking ético."
echo 
echo " ¿Qué hace que bWAPP sea tan único? Bueno dejame te  explico, ¡tiene más de 100 VULNERABILIDADES web!!!"
echo " Cubre todos los principales errores web conocidos, incluidos todos los riesgos del proyecto OWASP Top 10."
echo
echo " bWAPP es una aplicación PHP que utiliza una base de datos MySQL. Se puede alojar en Linux/Windows "
echo " con Apache/IIS y MySQL. También se puede instalar con WAMP o XAMPP."
echo " otra posibilidad es descargar bee-box, una máquina virtual Linux personalizada preinstalada con bWAPP."
echo
echo "bWAPP es una web app para testeo de seguridad y fines educativos unicamente ;)"
echo "Diviertete con este projecto de software libre!"
echo
echo "link:   http://www.itsecgames.com/"
echo
echo "TECH: 	PHP / MySQL"
echo "FEATURES: Diferentes niveles de dificultad para el desarrollo de pruebas de penetración"
}

iniciar_systeminfo_bwapp () 
{
  echo "Recuerda ejecutar install.php antes de usar bwapp por primera vez."
  echo "en: http://bwapp/install.php"
  echo "por defecto usuario/contraseña:  bee/bug"
  echo "bWAPP ahora esta disponible en http://bwapp"
}

############################################################################################################################

########################################################### WebGoat ###########################################################

project_info_webgoat7 () 
{
echo "WebGoat es una aplicación web deliberadamente insegura mantenida por OWASP diseñada para enseñar"
echo "Lecciones de seguridad de aplicaciones web. Puedes instalar y practicar con WebGoat."
echo "La comprensión de un problema de seguridad mediante la explotación de una vulnerabilidad real en la"
echo "Aplicacione WebGoat. Por ejemplo, en una de las lecciones el usuario debe usar inyección SQL"
echo "para robar números de tarjetas de crédito falsos. La aplicación tiene como objetivo proporcionar una enseñanza realista."
echo " entorno, que proporciona a los usuarios sugerencias y código para explicar mejor la lección"
echo
echo "¿Por qué el nombre WebGoat? Los desarrolladores no deben sentirse mal por no conocer la seguridad. Incluso los mejores programadores"
echo "cometen errores de seguridad. Lo que necesitan es un chivo expiatorio, ¿verdad? ¡Solo échale la culpa a la Cabra!"
echo
echo "link:  https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"
echo
echo "TECH: 	J2EE JAVA"
echo "FEATURES: Lecciones de aprendizaje"
}

iniciar_systeminfo_webgoat7 () 
{
  echo "WebGoat 7.1 ahora esta disponible en: http://webgoat7/WebGoat"
}

project_info_webgoat8 () 
{
echo "WebGoat es una aplicación web deliberadamente insegura mantenida por OWASP diseñada para enseñar"
echo "Lecciones de seguridad de aplicaciones web. Puedes instalar y practicar con WebGoat."
echo "La comprensión de un problema de seguridad mediante la explotación de una vulnerabilidad real en la"
echo "Aplicacione WebGoat. Por ejemplo, en una de las lecciones el usuario debe usar inyección SQL"
echo "para robar números de tarjetas de crédito falsos. La aplicación tiene como objetivo proporcionar una enseñanza realista."
echo " entorno, que proporciona a los usuarios sugerencias y código para explicar mejor la lección"
echo
echo "¿Por qué el nombre WebGoat? Los desarrolladores no deben sentirse mal por no conocer la seguridad. Incluso los mejores programadores"
echo "cometen errores de seguridad. Lo que necesitan es un chivo expiatorio, ¿verdad? ¡Solo échale la culpa a la Cabra!"
echo
echo "link:  https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"
echo
echo "TECH: 	J2EE JAVA"
echo "FEATURES: Lecciones de aprendizaje"
}

iniciar_systeminfo_webgoat8 () 
{
  echo "WebGoat 8.0 ahora esta disponible en: http://webgoat8/WebGoat"
}

############################################################################################################################

########################################################### NodeGoat #######################################################

project_info_nodegoat () 
{
echo "NodeGoat es una aplicación web deliberadamente insegura mantenida por OWASP diseñada para enseñar"
echo "lecciones de seguridad de aplicaciones web. Puedes instalar y practicar con NodeGoat."
echo "Hay otras cabras como NodeGoat para Node.js. En cada lección, los usuarios deben demostrar"
echo "su comprensión de un problema de seguridad mediante la explotación de una vulnerabilidad real en la"
echo "Aplicacion de NodeGoat. Por ejemplo, en una de las lecciones el usuario debe usar inyecciones de javascript"
echo "para robar números de tarjetas de crédito falsos. La aplicación tiene como objetivo proporcionar una enseñanza realista."
echo "en un entorno, que proporciona a los usuarios sugerencias y código para explicar mejor la lección"
echo
echo "¿Por qué el nombre NodeGoat? Los desarrolladores no deben sentirse mal por no conocer la seguridad. Incluso los mejores programadores"
echo "cometen errores de seguridad. Lo que necesitan es un chivo expiatorio, ¿verdad? ¡Solo échale la culpa a la Cabra!"
echo
echo "link:   https://wiki.owasp.org/index.php/Projects/OWASP_Node_js_Goat_Project"
echo
echo "TECH: 	Node.js NoSQL"
echo "FEATURES: Lecciones de aprendizaje"
}

iniciar_systeminfo_nodegoat () 
{
  echo "NodeGoat 1.3 ahora disponible en: http://nodegoat.net/login"
  echo "Cuenta Demo - Usuario:demo Contraseña:demo"
  echo "También se pueden agregar nuevos usuarios mediante la página de registro."
}

############################################################################################################################

####################################################### DVWA ###############################################################

project_info_dvwa () 
{
echo "El objetivo de DVWA es practicar algunas de las vulnerabilidades web más comunes, con varios"
echo "niveles de dificultad, con una interfaz sencilla y directa. Tenga en cuenta que hay"
echo "vulnerabilidades documentadas y no documentadas con este software. Esto es intencional."
echo "Le recomendamos que intente descubrir tantos problemas como sea posible."
echo
echo "link:   https://www.dvwa.co.uk/"
echo
echo "TECH: 	PHP / MySQL"
echo "FEATURES: Diferntes niveles de dificultad"
}

iniciar_systeminfo_dvwa () 
{
  echo "DVWA ahora disponible en: http://dvwa"
  echo "Por defecto Usuario/Contraseña:   admin/password"
  echo "Recuerda hacer click en el boton CREATE DATABASE antes de comenzar para asi crear la base de datos"
}
############################################################################################################################

####################################################### mutillidae ##########################################################
project_info_mutillidae ()
{
echo "NOWASP (Mutillidae) es una aplicación web gratuita, de código abierto y deliberadamente vulnerable"
echo "proporcionando un objetivo para los entusiastas de la seguridad web".
echo "Proyecto Incubado por OWASP."
echo
echo "TECH: PHP / MySQL"
echo "FEATURES: differntes niveles de dificultad"
}

iniciar_systeminfo_mutillidae ()
{
   echo "OWASP Mutillidae II ahora disponible en: http://mutillidae"
   echo "Recuerde hacer clic en el enlace create database antes de comenzar"
}
############################################################################################################################

####################################################### JuiceShop ###########################################################
project_info_juiceshop ()
{
echo "OWASP Juice Shop es una aplicación web intencionalmente insegura escrita completamente en JavaScript"
echo "que abarca toda la gama de OWASP Top Ten y otras graves fallas de seguridad".
echo "link: https://github.com/bkimminich/juice-shop"
echo
echo "TECH: Javascript"
echo "FEATURES: web moderna con vulneraborabilidades frecuentes"
}

iniciar_systeminfo_juiceshop ()
{
   echo "juiceshop OWASP ya está disponible en: http://juiceshop"
}
############################################################################################################################

####################################################### securitysheperd ###############################################################
project_info_securitysheperd  ()
{
echo "El proyecto OWASP securitysheperd es una plataforma de capacitación en seguridad de aplicaciones web y móviles. "
echo "securitysheperd  ha sido diseñado para fomentar y mejorar la conciencia de seguridad entre una variedad"
echo "demografíca de habilidades. El objetivo de este proyecto es tomar AppSec principiantes o experimentados"
echo "ingenieros y perfeccionar su conjunto de habilidades de pruebas de penetración al estado de experto en seguridad".
echo "link: https://www.owasp.org/index.php/OWASP_Security_Shepherd"
echo
echo "FEATURES: Diferentes niveles de dificultad"
}

iniciar_systeminfo_seguridadsheperd ()
{
   echo "OWASP securitysheperd ahora disponible en http://securitysheperd"
}
############################################################################################################################

####################################################### vulnerablewordpress ###############################################################
project_info_vulnerablewordpress () 
{
echo "Aplicación WordPress Vulnerable"
echo
echo "link: https://github.com/wpscanteam/VulnerableWordpress"
echo
echo "TECNOLOGÍA: PHP / MySQL"
echo "CARACTERÍSTICAS: "
}

iniciar_systeminfo_vulnerablewordpress ()
{
   echo "El sitio de WordPress vulnerable de WPScan ahora está disponible en localhost en http://vulnerablewordpress"
}
############################################################################################################################

####################################################### securityninja ###########################################################
project_info_securityninjas () 
{
echo "Este laboratorio de capacitación práctica consta de 10 divertidos ejercicios de piratería del mundo real,"
echo "correspondientes a cada una de las 10 vulnerabilidades principales de OWASP. Se proporcionan sugerencias y" 
echo "soluciones a lo largo del camino. Aunque el backend para esto está escrito en PHP, las vulnerabilidades seguirán"
echo "siendo las mismas en todos los lenguajes basados en la web, por lo que la capacitación seguirá siendo relevante "
echo "incluso si no codifica activamente en PHP."
echo
echo "link: https://github.com/opendns/Security_Ninjas_AppSec_Training"
echo
echo "TECH: PHP / MySQL"
echo "FEATURES: Lecciones de aprendizaje, tips y solucion"
}

iniciar_systeminfo_securityninjas ()
{
  echo "Security Ninjas ahora esta disponible en: http://securityninjas"
}
#################################################################################################################################


iniciar_system ()
{
  fullname=$1		# ex. WebGoat 7.1
  projectname=$2     	# ex. webgoat7
  dockername=$3  	# ex. raesene/bwapp
  ip=$4   		# ex. 127.5.0.1
  port=$5		# ex. 80
  port2=$6		# optional second port binding
  
  echo -e "\e[1;32mIniciando $fullname"
  addhost "$ip" "$projectname"


  if [ "$(sudo docker ps -aq -f name=$projectname)" ]; 
  then
    echo -e "\e[1;36mRunning command: docker start $projectname"
    sudo docker start $projectname
  else
    if [ -n "${6+set}" ]; then
      echo -e "\e[1;36mEjecutando: docker run --name $projectname -d -p $ip:80:$port -p $ip:$port2:$port2 $dockername"
      sudo docker run --name $projectname -d -p $ip:80:$port -p $ip:$port2:$port2 $dockername
    else echo -e "\e[1;31mNo se pudo establecer en este puerto, probando en otro...";
      echo -e "\e[1;36mEjecutando: docker run --name $projectname -d -p $ip:80:$port $dockername"
      sudo docker run --name $projectname -d -p $ip:80:$port $dockername
    fi
  fi
  echo -e "\e[1;32mFINALIZADO!"
  echo
  echo -e "\e[1;32mDocker vinculado a: http://$projectname o http://$ip"
  echo
}

project_detener ()
{
  fullname=$1	# ex. WebGoat 7.1
  projectname=$2     # ex. webgoat7

  echo -e "\e[1;31mDeteniendo... $fullname"
  echo -e "\e[1;36mEjecutando: docker stop $projectname"
  sudo docker stop $projectname
  removehost "$projectname"
  echo -e "\e[1;31mApplicacion detenida, ya no esta disponible http://$projectname"
}


estado()
{
  if [ "$(sudo docker ps -q -f name=bwapp)" ]; then
    echo -e "\e[1;32mbWaPP				Ejecutandose en http://bwapp"
  else 
    echo -e "\e[1;31mbWaPP				Detenida"
  fi
  if [ "$(sudo docker ps -q -f name=webgoat7)" ]; then
    echo -e "\e[1;32mWebGoat 7.1			Ejecutandose en http://webgoat7/WebGoat"
  else 
    echo -e "\e[1;31mWebGoat 7.1			Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=webgoat8)" ]; then
    echo -e "\e[1;32mWebGoat 8.0			Ejecutandose en http://webgoat8/WebGoat"
  else 
    echo -e "\e[1;31mWebGoat 8.0			Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=nodegoat)" ]; then
    echo -e "\e[1;32mNodeGoat 1.3			Ejecutandose en http://nodegoat.net/login"
  else 
    echo -e "\e[1;31mNodeGoat 1.3			Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=dvwa)" ]; then
    echo -e "\e[1;32mDVWA				Ejecutandose en http://dvwa"
  else 
    echo -e "\e[1;31mDVWA				Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=mutillidae)" ]; then
    echo -e "\e[1;32mMutillidae II			Ejecutandose en http://mutillidae"
  else 
    echo -e "\e[1;31mMutillidae II			Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=juiceshop)" ]; then
    echo -e "\e[1;32mOWASP Juice Shop 		Ejecutandose en http://juiceshop"
  else 
    echo -e "\e[1;31mOWASP Juice Shop 		Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=vulnerablewordpress)" ]; then
    echo -e "\e[1;32mWPScan Vulnerable Wordpress 	Ejecutandose en http://vulnerablewordpress"
  else 
    echo -e "\e[1;31mWPScan Vulnerable Wordpress	Detenida"  
  fi
  if [ "$(sudo docker ps -q -f name=securityninjas)" ]; then
    echo -e "\e[1;32mOpenDNS Security Ninjas 	Ejecutandose en http://securityninjas"
  else 
    echo -e "\e[1;31mOpenDNS Security Ninjas 	Detenida"  
  fi
}

estado_system()
{
  if [ "$(sudo docker ps -q -f name=$1)" ]; then
    return 1
  else 
    return 0
  fi
}

start_system()
{
  case "$1" in
    bwapp)
      iniciar_system "bWAPP" "bwapp" "raesene/bwapp" "127.10.0.1" "80"
      iniciar_systeminfo_bwapp
    ;;
    webgoat7)
      iniciar_system "WebGoat 7.1" "webgoat7" "webgoat/webgoat-7.1" "127.11.0.1" "8080"
      iniciar_systeminfo_webgoat7
    ;;
    webgoat8)
      iniciar_system "WebGoat 8.0" "webgoat8" "webgoat/webgoat-8.0" "127.12.0.1" "8080"
      iniciar_systeminfo_webgoat8
    ;;
    nodegoat)
      iniciar_system "NodeGoat 1.3" "nodegoat" "bjm243/nodegoat" "127.13.0.1" "4000"
      iniciar_systeminfo_nodegoat
    ;;
    dvwa)
      iniciar_system "Damn Vulnerable Web Appliaction" "dvwa" "vulnerables/web-dvwa" "127.14.0.1" "80"
      iniciar_systeminfo_dvwa
    ;;    
    mutillidae)
      iniciar_system "Mutillidae II" "mutillidae" "citizenstig/nowasp" "127.15.0.1" "80"
      iniciar_systeminfo_mutillidae
    ;;
    juiceshop)
      iniciar_system "OWASP Juice Shop" "juiceshop" "bkimminich/juice-shop" "127.16.0.1" "3000"
      iniciar_systeminfo_juiceshop
    ;;
    securitysheperd)
      iniciar_system "OWASP Security Shepard" "securitysheperd" "ismisepaul/securityshepherd" "127.17.0.1" "80"
      iniciar_systeminfo_securitysheperd
    ;;
    vulnerablewordpress)
      iniciar_system "WPScan Vulnerable Wordpress" "vulnerablewordpress" "l505/vulnerablewordpress" "127.18.0.1" "80" "3306"
      iniciar_systeminfo_vulnerablewordpress
    ;;
    securityninjas)    
      iniciar_system "Open DNS Security Ninjas" "securityninjas" "opendns/security-ninjas" "127.19.0.1" "80"
      iniciar_systeminfo_securityninjas
    ;;
    *)
    echo -e "\e[1;31ERROR: No se reconoce el proyecto $1, no se pudo inicializar" 
    ;;
  esac  
}


detener_system()
{
  case "$1" in
    bwapp)
      project_detener "bWAPP" "bwapp"
    ;;
    webgoat7)
      project_detener "WebGoat 7.1" "webgoat7"
    ;;
    webgoat8)
      project_detener "WebGoat 8.0" "webgoat8"
    ;;
    nodegoat)
      project_detener "NodeGoat 1.3" "nodegoat"
    ;;
    dvwa)
      project_detener "Damn Vulnerable Web Appliaction" "dvwa"
    ;;
    mutillidae)
      project_detener "Mutillidae II" "mutillidae"
    ;;
    juiceshop)
      project_detener "OWASP Juice Shop" "juiceshop"
    ;;
    securitysheperd)
      project_detener "OWASP Security Sheperd" "securitysheperd"
    ;;
    vulnerablewordpress)
      project_detener "WPScan Vulnerable Wordpress" "vulnerablewordpress"
    ;;
    securityninjas)
      project_detener "Open DNS Security Ninjas" "securityninjas"
    ;;
    *)
    echo -e "\e[1;31ERROR: No se reconoce el proyecto $1, no se pudo detener" 
    ;;
  esac  
}

case "$1" in
  iniciar)
    if [ -z "$2" ]
    then
      echo -e "\e[1;31ERROR: la opción iniciar requiere un parámetro en minusculas"
      echo 
      lista
      break
    fi
    start_system $2
    ;;
  detener)
    if [ -z "$2" ]
    then
      echo -e "\e[1;31ERROR: la opción detener requiere un parámetro en minusculas"
      echo 
      lista
      break
    fi
    detener_system $2
    ;;
  lista)
    lista
    ;;
  estado)
    estado
    ;;
  info)
    if [ -z "$2" ]
    then
      echo -e "\e[1;31ERROR: la opción info requiere un parámetro en minusculas"
      echo 
      lista
      break
    fi
    info $2
    ;;
  *)
    ayuda
;;
esac  
